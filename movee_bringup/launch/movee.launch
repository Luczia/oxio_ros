<?xml version="1.0"?>
<launch>

  <group ns="/"> <!-- TODO : Link This namesapace variable launch to the xacro namesapce -->
  
  
  <!-- Define some movee specific variables -->
  <arg name="training_wheels" default="false" />


  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched (appart) -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
  <arg name="paused" value="true"/>
  <arg name="use_sim_time" value="true"/>
  <arg name="gui" value="true"/>
  <arg name="recording" value="false"/>
  <arg name="debug" value="false"/>
  <arg name="world_name" value="$(find movee_gazebo)/worlds/appartb.world"/> 
  </include>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched (appart) -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find movee_description)/urdf/movee.urdf'" />
    <arg name="x" default="0"/>
    <arg name="y" default="0"/>
    <arg name="z" default="-0.30"/>
    <arg name="R" value="0" />
    <arg name="P" default="0"/>
    <arg name="Y" default="0"/>
  
 <!-- Load controllers -->
  <rosparam command="load" file="$(find movee_description)/config/joints.yaml" />

  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
          output="screen" 
          args="joint_state_controller
                knee_pivot_left_position_controller
                knee_pivot_right_position_controller
                hip_pivot_left_position_controller
                hip_pivot_right_position_controller               
                mobile_base_controller
                --timeout 30"
  /> 
                  
   <!--         wheel_pivot_left_position_controller
                wheel_pivot_right_position_controller -->

   

     
  
  <node name="movee_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
          args="-urdf -param robot_description -model Movee 
          -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg R) -P $(arg P) -Y $(arg Y)" />
          
  
    <!-- send fake joint values -->
     <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
         <param name="use_gui" value="False"/> 
    </node> 
    
     <!-- <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui"/> -->

    <!-- Combine joint values -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
    
    <!-- Show in Rviz   -->
    <!-- <node name="rviz" pkg="rviz" type="rviz" args="-d $(find my_robot_description)/rviz/robotmodel.rviz" /> -->

  </group>
</launch>
